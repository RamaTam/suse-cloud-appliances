#!/bin/bash
#
# suse_studio_firstboot
#

# Global Variables 
ISODIR="/srv/tftpboot/iso"
REPOSDIR="/srv/tftpboot/repos"
SMTREPOS="/srv/www/htdocs/repo/"
LOGFILE='/var/log/prepare-admin1.log'
DEV=0

# Infrastructure for nice output/logging
# --------------------------------------

# Send stdout to LOGFILE
exec > "$LOGFILE" 2>&1

link_smt_repos() {
    echo "Creating symlinks for SMT repos"
    
    # Creating symlinks for SMT repos that were extracted
    for REPO in SLES11-SP3-{Pool,Updates} SUSE-Cloud-4-{Pool,Updates} SLE11-HAE-SP3-{Pool,Updates}; do
        ln -s $SMTREPOS\$RCE/$REPO/sle-11-x86_64 $REPOSDIR/${REPO/.0/}
    done

    if [[ $DEV = 1 ]]; then
        for REPO in SUSE-Cloud-4-{Pool,Updates}; do
            rm $REPOSDIR/${REPO/.0/}
        done
    fi
}

setup_local_smt() {
    echo "Extracting SMT repo archives"

    #uncomment for local build
    #mkdir -p /srv/www/htdocs/repo/\$RCE/
    #for archive in /SLES11-SP3-Pool.tar.bz2 /SLES11-SP3-Updates.tar.bz2 /SLE11-HAE-SP3-Pool.tar.bz2 /SLE11-HAE-SP3-Updates.tar.bz2 /SUSE-Cloud-4-Pool.tar.bz2 /SUSE-Cloud-4-Updates.tar.bz2; do
    #    tar -xjvf $archive -C $SMTREPOS\$RCE/
    #    rm $archive
    #done
    chown -R smt:www /srv/www/htdocs/repo/\$RCE/

    link_smt_repos
}

setup_local_sles_repos() {
    echo "Adding SLES 11 SP3 repos"

    mkdir -p /srv/tftpboot/suse-11.3/install/

    # mount SLES 11 SP3 ISO and DEPS ISO and extract contents to /srv/tftpboot/suse-11.3/install/
    for ISO in SLES-11-SP3-DVD-x86_64-GM-DVD1.iso; do
        mount -o loop $ISODIR/$ISO /mnt
        echo "extracting $ISO"
        rsync -av /mnt/ /srv/tftpboot/suse-11.3/install/
        umount /mnt
        echo "extracting $ISO Complete"
    done
    # Add repos to zypper
    zypper --gpg-auto-import-keys refresh
    zypper ar --refresh file:///srv/tftpboot/suse-11.3/install/ "SLES 11 SP3 Media"
    zypper ar --refresh file://$REPOSDIR/SLES11-SP3-Updates/ "SLES 11 SP3 Updates"
}

setup_local_cloud_repos() {
    echo "Setting up Cloud repos"

    mkdir -p $REPOSDIR/Cloud/

    # create a fake repo so the SUSE Cloud 4 ISO is not required
    createrepo $REPOSDIR/Cloud/

    # Add repos to zypper
    zypper --gpg-auto-import-keys refresh
    zypper ar --refresh file://$REPOSDIR/SUSE-Cloud-4-Pool/ "SUSE-Cloud-4-Pool"
    if [[ $DEV = 0 ]]; then
        zypper ar --refresh file://$REPOSDIR/SUSE-Cloud-4-Updates/ "SUSE-Cloud-4-Updates"
    else
        echo "Devel Image: Skipping..."
    fi
}

install_cloud_admin() {
    zypper --gpg-auto-import-keys refresh
    zypper up -y --auto-agree-with-licenses --force-resolution
    zypper in -n -y --auto-agree-with-licenses --force-resolution -t pattern cloud_admin
    zypper in -n -y --auto-agree-with-licenses --force-resolution ipmitool
}

main() {
    setup_local_smt
    setup_local_sles_repos
    setup_local_cloud_repos
    install_cloud_admin    
    echo "Clean up"
    # Cleanup firstboot
    mv /etc/init.d/suse_studio_firstboot /tmp/
    exit 0
}

main "$@"
